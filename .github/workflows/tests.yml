name: Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      max-parallel: 4
      matrix:
        # remove ubuntu runner for now because pip is broken on ubuntu
        # with error pip._vendor.packaging.version.InvalidVersion: Invalid version: '6.5.0-1025-azure'
        # and I don't have time to try to fix this
        # os: [macos-14, ubuntu-latest]
        os: [macos-14]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
    - name: Checkout (sparse)
      uses: actions/checkout@v4
      with:
        # Fetch only what's needed for tests to speed up checkout
        sparse-checkout: |
          osxphotos
          tests
          examples
          pyproject.toml
          requirements.txt
          dev_requirements.txt
          pytest.ini
          setup.py
          MANIFEST.in
          README.md
    - name: Setup uv with Python ${{ matrix.python-version }}
      uses: astral-sh/setup-uv@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache uv download cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'dev_requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ matrix.python-version }}-
    - name: Cache virtualenv
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'dev_requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-${{ matrix.python-version }}-
    - name: Install dependencies (uv)
      run: |
        uv venv
        uv pip install -r requirements.txt
        uv pip install -r dev_requirements.txt
    - name: Install exiftool
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        if [ "$RUNNER_OS" == "Linux" ]; then
          (echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/runner/.bash_profile
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          export PATH=/home/linuxbrew/.linuxbrew/bin:$PATH
        elif [ "$RUNNER_OS" == "macOS" ]; then
          echo "macOS: brew should already be on path"
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
        brew install exiftool
    - name: Test with pytest
      run: |
        uv run python -m pytest -v tests/
    - name: Send failure notification
      if: ${{ failure() }}
      run: |
        curl \
          -H "Click: https://github.com/RhetTbull/osxphotos/actions/" \
          -d "osxphotos test failed" \
           ntfy.sh/rhettbull_github_actions
